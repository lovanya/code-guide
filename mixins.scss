/*
* less mixins
*/

// 为css3属性添加浏览器兼容前缀
@mixin vendor($prop, $style) {
  -webkit-#{$prop}: $style; // Webkit 前缀
  -moz-#{$prop}: $style; // Mozilla 前缀
  -ms-#{$prop}: $style; // IE 前缀
  -o-#{$prop}: $style; // Opera 前缀
  #{$prop}: $style;
}

// border-radius
@mixin borderRadius($style) {
  @include vendor(border-radius, $style);
}

// 盒模型大小计算方式，content-box 盒子实际高度 = height（content height） + padding + border，border-box 盒子实际高度 = height（content + padding + border），
@mixin boxSizing($style: border-box) {
  @include vendor(box-sizing, $style);
}

// transform
@mixin transform($style) {
  @include vendor(transform, $style);
}

// box-shadow
@mixin boxShadow($style) {
  @include vendor(box-shadow, $style);
}

// 表单元素垂直居中对齐（也可设置顶对齐，底对齐），$alignment：middle top bottom
@mixin formElementVerticalAlign($alignment: middle) {
  display: inline-block;
  *display: inline;
  zoom: 1;

  vertical-align: $alignment;
  *vertical-align: auto;
}

// 居中
@mixin center() {
  position: absolute;
  top: 50%;
  left: 50%;

  @include transform(translate(-50%, -50%));
}

// 水平居中
@mixin horizontalCenter() {
  position: absolute;
  left: 50%;

  @include transform(translateX(-50%));
}

// 垂直平居中
@mixin verticalCenter() {
  position: absolute;
  top: 50%;

  @include transform(translateY(-50%));
}

// 居中(容器需要有固定宽高)
@mixin center-wh($width, $height) {
  position: absolute;
  top: 50%;
  left: 50%;

  margin-left: -($width / 2);
  margin-top: -($height / 2);
  width: $width;
  height: $height;
}

// 水平居中(容器需要有固定宽度)
@mixin horizontalCenter-w($width) {
  position: absolute;
  left: 50%;

  margin-left: -($width / 2);
  width: $width;
}

// 垂直居中(容器需要有固定高高)
@mixin verticalCenter-h($height) {
  position: absolute;
  top: 50%;

  margin-top: -($height / 2);
  height: $height;
}

// 浮动（主要针对PC端了...）
@mixin float($side: left) {
  float: $side;
  _display: inline;
}

// 清除浮动(其实很多时候，clear-fix也被提取为单类使用)
@mixin clearFix() {
  *zoom: 1;
  &:before,
  &:after {
    content: '';
    display: table;
    clear: both;
    overflow: hidden;
  }
}

// 截取文本(仅针对单行)
@mixin singleLineEllipsis($height, $line-height, $width: auto) {
  width: $width;
  height: $height;
  line-height: $line-height;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// 设置透明度
@mixin opacity($val) {
  filter: alpha(opacity= $val);
  opacity: $val / 100;
}

//不可用状态
@mixin disabled($bgColor: #e6e6e6, $textColor: #ababab) {
  background-color: $bgColor !important;
  color: $textColor !important;
  cursor: not-allowed !important;
}

// 最小宽度（主要针对PC端了...）
@mixin minWidth($width) {
  min-width: $width;
  width: auto !important;
  _width: $width;
}

// 最小高度（主要针对PC端了...）
@mixin minHeight($height) {
  min-height: $height;
  height: auto !important;
  _height: $height;
}
